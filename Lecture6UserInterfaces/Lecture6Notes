You can use js to change just a pat of a website rather than loading a whole new page.
In some scenarios it makes sense to make fetch request from a server and for this you can use the same general function logic that we used for showPage however using it to show sections of formatted or raw data coming from a server and manually or using hyperlinks switching between pages.
However if you just combine loading data from servers on asingle page using buttons, you will still get the same result but you wont have different urls since you are technically not changing pages.
You can solve this by pushing the wbpage state to the js history api which pushes these changes to the user's browser history so they can revisit the specific state of the webpage if it is still accessible.
Two elements that js gives us access to are window which is the physical screen the user has and document which is the webpage.
Both of these are useful like window can help the server know how far the user has scrolled, the length of the actual screen while document allows us to find specific elements, and measurements of the webpage itself.
Using these number we can calculate when auser has reached the end of the page which is where we can add prompts on a news website or on a social media website's post. This is a concept known as infinite scroll.
React is a js library and framework which allows our websites to be more reactive and dynamic without having tons of written javascript code like in imperative programming which is what we have done so far where you tell the computer what to do and requires more code to be written. React however runs on the idea of declarative programming where you describe what you want the program to do and react will divide you webpage into different components that can be manipulated much more easily than with imperative programming.
To use react you will need three packages which are the react package itself, ReactDOM which will allows us to insert react code into the Document OBject Model which is the structure of the webpage itself and Babel which will translate react code which is written in JSX (an extension of javascript code) into regular JavaScript that browsers can understand and display. THis is simlar to css and scss.
In JSX you can use html like syntax whilst still technically writing in JS.
To be more efficient you can create a react state with a list of values, constants and variable, however to change these without manually changing the state you have to create a function to update this and to avoid having to list everything that stays the same you can use the shorthand ...state, and then on the next lines write the stuff that does change.

